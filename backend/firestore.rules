rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isOwner(resource) {
      return request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    function isLandlord() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/landlords/$(request.auth.uid));
    }
    
    function isValidPGData() {
      return request.resource.data.keys().hasAll(['title', 'roomType', 'area', 'monthlyRent']) &&
             request.resource.data.monthlyRent is number &&
             request.resource.data.monthlyRent >= 1000 &&
             request.resource.data.monthlyRent <= 100000;
    }
    
    function isValidInquiryData() {
      return request.resource.data.keys().hasAll(['name', 'phone', 'pgId']) &&
             request.resource.data.name is string &&
             request.resource.data.phone is string;
    }
    
    // Public read access to approved PGs
    match /pgs/{pgId} {
      allow read: if resource.data.status == 'approved';
      allow write: if isAdmin() || (isLandlord() && isOwner(resource) && isValidPGData());
      allow create: if isLandlord() && isValidPGData();
      allow delete: if isAdmin() || (isLandlord() && isOwner(resource));
    }
    
    // Landlords collection
    match /landlords/{landlordId} {
      allow read: if isAdmin() || (isLandlord() && request.auth.uid == landlordId);
      allow write: if isAdmin();
  allow create: if request.auth != null && request.auth.uid == landlordId;
    }
    
    // Inquiries collection
    match /inquiries/{inquiryId} {
      allow read: if isAdmin() || 
                     (isLandlord() && request.auth.uid == resource.data.landlordId);
      allow create: if isValidInquiryData();
      allow write: if isAdmin() || 
                      (isLandlord() && request.auth.uid == resource.data.landlordId);
    }
    
    // Admin-only collections
    match /admins/{adminId} {
      allow read, write: if isAdmin();
    }
    
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Contact messages - anyone can create, only admins can read
    match /contacts/{contactId} {
      allow create: if true;
      allow read: if isAdmin();
    }
    
    // Analytics and logs - admin only
    match /analytics/{document=**} {
      allow read, write: if isAdmin();
    }
    
    match /logs/{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Deny all other operations
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
